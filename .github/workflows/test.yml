name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          skip_after_successful_duplicate: "true"
          paths_ignore: '["**/*.md", "**/*.svg", "**/*.png", ".gitignore"]'

  code_check:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - name: Checking code format
        run: cargo fmt -- --check --config use_try_shorthand=true
      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt
      - name: Run rust-clippy
        run: cargo clippy
          --all-features
          --tests
          --benches
          --message-format=json
          --
          -D warnings | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
        env:
          GTLBSTR_TEST_GITLAB_TOKEN: ""

  unit_tests:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run tests
        run: cargo test
